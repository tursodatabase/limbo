name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  cargo-fmt-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check formatting
      run: cargo fmt --check

  build-native:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Build
      run: cargo build --verbose
    - name: Test
      env:
        RUST_LOG: ${{ runner.debug && 'limbo_core::storage=trace' || '' }}
      run: cargo test --verbose
      timeout-minutes: 5

  build-wasm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - run: wasm-pack build --target nodejs bindings/wasm

  bench:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Bench
      run: cargo bench

  test-limbo:
    runs-on: ubuntu-latest
    steps:
    - name: Install sqlite
      run: sudo apt update && sudo apt install -y sqlite3 libsqlite3-dev
    - name: Install cargo-c
      env:
        LINK: https://github.com/lu-zero/cargo-c/releases/download/v0.10.7
        CARGO_C_FILE: cargo-c-x86_64-unknown-linux-musl.tar.gz
      run: |
        curl -L $LINK/$CARGO_C_FILE | tar xz -C ~/.cargo/bin

    - uses: actions/checkout@v2
    - name: Test
      run: make test

  test-sqlite:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install sqlite
      run: sudo apt update && sudo apt install -y sqlite3 libsqlite3-dev
    - name: Test
      run: SQLITE_EXEC="sqlite3" make test-compat

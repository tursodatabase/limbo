name: Add Author Info to PR Description
on:
  pull_request:
    types: [opened]
  push:
    branches:
      - '**'

permissions:
  pull-requests: write

concurrency:
  group: pr-description-updater-${{ github.event.pull_request.head.ref || github.ref }}
  cancel-in-progress: false

jobs:
  add-author:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR number
        id: prep
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let prNumber;
            if (context.eventName === 'push') {
              const prs = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`,
                state: 'open'
              });
              if (prs.data.length === 0) {
                console.log('No associated PR found for this push');
                return;
              }
              prNumber = prs.data[0].number;
            } else {
              prNumber = context.issue.number;
            }
            core.setOutput('pr_number', prNumber);
      - name: Update PR Description
        if: steps.prep.outputs.pr_number != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = parseInt('${{ steps.prep.outputs.pr_number }}');
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            // Fetch complete user details
            const userDetails = await github.rest.users.getByUsername({
              username: pr.data.user.login
            });

            const authorInfo = `
            Author: ${userDetails.data.name || 'Name not provided'} (@${pr.data.user.login})
            `;

            // Check if author info already exists
            if (pr.data.body && pr.data.body.includes(authorInfo.trim())) {
              console.log('Author info already present');
              return;
            }

            const updatedBody = `${pr.data.body || ''}\n\n${authorInfo}`;

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              body: updatedBody
            });
